<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>个人博客搭建</title>
    <url>/2020/12/08/ge-ren-bo-ke-da-jian/</url>
    <content><![CDATA[<h2 id="一、个人博客搭建的几种方法"><a href="#一、个人博客搭建的几种方法" class="headerlink" title="一、个人博客搭建的几种方法"></a><font color="born">一、个人博客搭建的几种方法</font></h2><h3 id="1-动态博客的搭建"><a href="#1-动态博客的搭建" class="headerlink" title="1 动态博客的搭建"></a><strong>1 动态博客的搭建</strong></h3><ol>
<li>自己动手写前端后端搭建动态博客。（比较困难）</li>
<li>通过wordpress动态博客框架系统。（<a href="http://wordpress.org/">wordpress网址</a>）</li>
</ol>
<h3 id="2-静态博客的框架"><a href="#2-静态博客的框架" class="headerlink" title="2 静态博客的框架"></a><strong>2 静态博客的框架</strong></h3><ol>
<li>hexo框架：快速、简介且高效的博客框架。<font color="red">比较火</font>（<a href="http://hexo.io/zh-cn">hexo</a>）</li>
<li>jekyllrb框架：将纯文本转换为静态网站和博客。（<a href="http://jekyllrb.com/zh-cn">jekyllrb</a>）</li>
<li>gohugo框架：基于go语言的静态博客框架。（<a href="https://www.gohugo.org/">gohugo</a>）</li>
<li>vuepress框架：Vue供电的静态站点生成器。（<a href="https://vuepress.vuejs.org/">veepress</a>）</li>
</ol>
<h2 id="二、个人博客搭建教程—–hexo"><a href="#二、个人博客搭建教程—–hexo" class="headerlink" title="二、个人博客搭建教程—–hexo"></a><font color="born">二、个人博客搭建教程—–hexo</font></h2><p>​    由于 hexo 框架比较火，网上的教程也比较全，接下来就以 hexo 的搭建步骤来演示。系统环境是MacOs，Windown系统大同小异。</p>
<h3 id="1-安装Node-js-（直接去官网下载安装即可node-js）"><a href="#1-安装Node-js-（直接去官网下载安装即可node-js）" class="headerlink" title="1 安装Node.js    （直接去官网下载安装即可node.js）"></a>1 安装Node.js    （直接去官网下载安装即可<a href="https://nodejs.org/zh-cn/">node.js</a>）</h3><p>​    安装的时候会安装<font color="red">Node.js</font>本身和<font color="red">npm</font>包管理器。都是后序需要用到的工具。</p>
<p>​    在终端中输入node -v 和 npm -v 查看node.js 和 npm 的版本，如果安装成功则会显示下图类似结果。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">node -v
<span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glf8sspqk1j30v40awad8.jpg" alt="nodejs" width="50%"></center>

<center>图1：检查nodejs 和 npm 是否安装成功</center>

<h3 id="2-安装-hexo-博客框架"><a href="#2-安装-hexo-博客框架" class="headerlink" title="2 安装 hexo 博客框架"></a>2 安装 hexo 博客框架</h3><ul>
<li>利用npm包管理器来安装hexo框架，由于国内镜像源的速度很慢，一般会先利用npm输入下行命令安装一个 cnpm 指向淘宝的镜像源。在输入cnpm检查是否安装成功，出现下图使用方法和帮助文档则表示安装成功。</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glf98irwa1j316c0u0jys.jpg" alt="cnpm" width="50%"></center>

<center>图2：检查 cnpm 是否安装成功</center>

<ul>
<li>利用 cnpm 全局安装 hexo 博客框架。输入下列命令安装。</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cnpm <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>用 hexo -v 命令检验 hexo 是否安装成功，出现下面相关信息则表示安装成功，可以看得出hexo 框架是基于 nodejs 的。</li>
</ul>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glf9swpmi7j31900nwqce.jpg" alt="hexo" width="70%"></center>

<center>图3：检查 hexo 是否安装成功</center>

<h3 id="3-开始使用-hexo-搭建博客"><a href="#3-开始使用-hexo-搭建博客" class="headerlink" title="3 开始使用 hexo 搭建博客"></a>3 开始使用 hexo 搭建博客</h3><ul>
<li>新建一个文件夹，用于存放博客的相关文件，出了问题直接删掉这个文件夹即可，重来。我是在我的用户【文稿】文件夹下建了一个【Blog】文件夹。</li>
</ul>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glf9zte6juj31bm0pc45n.jpg" alt="Blog" width="70%"></center>

<center>图4：新建一个博客的专属文件夹</center>

<ul>
<li>在终端中到新建的【Blog】文件夹目录下，把该文件夹初始化为博客文件夹，用下列命令。</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>​    初始化这个需要些时间……..</p>
<p>​    初始化成功截图如下：</p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glfbbxgdl9j31900jwk25.jpg" alt="init" width="70%/"></center>

<center>图5：初始化博客文件夹成功</center>

<p>​    初试化成功后会在博客目录【Blog】下生成一系列文件，如下图。</p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glfbodfzjjj31jk0iw4b2.jpg" alt="文件" width="70%/"></center>

<center>图6：初始化博客生成的文件</center>

<ul>
<li>启动博客，初始化好博客之后非常好启动博客，用 hexo s 命令来启动 s 表示 start。</li>
</ul>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glfc7uin02j31jk0iw4ad.jpg" width="70%"></center>

<center>图7：启动 hexo </center>

<p>​    第一次启动可能会出错，提示在package.json文件中添加上述代码，需要修改package.json文件的权限才能添加代码。添加代码如下图8所示，添加后会出现图7后半部分的启动成功内容，显示在本机的4000端口运行。</p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glfc8cpfj6j30v40u0jzu.jpg" alt="2" width="70%"></center>

<center>图8：添加解决启动 hexo 出错代码</center>

<p>​    此时，去浏览器输入 <a href="http://localhost:4000/">http://localhost:4000</a> 便可访问到我们的博客。是默认主题的。默认给你生成了一篇博文hello-world。</p>
<h3 id="4-第一篇自己的博客"><a href="#4-第一篇自己的博客" class="headerlink" title="4 第一篇自己的博客"></a>4 第一篇自己的博客</h3><ul>
<li>新建markdown文件</li>
</ul>
<p>​      自动生成的博文在【Blog】-&gt;【source】-&gt;【_posts】文件夹下，以后我们写自己的博文也是放在这个文件夹，下面我们来自己创建第一篇博文。</p>
<p>可以在【_posts】问价夹下直接新建markdown文件，也可用下面命令在终端中新建。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token string">"博文的题目"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>​    【注意】：在上述新建博客的过程中也可能会出错，因为权限问题，需要修改【_posts】的权限才能新建成功。</p>
<ul>
<li><p>生成博客相关文件</p>
<p>要在【Blog】目录下操作。生成前先清理下文件：</p>
</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>​    再生成文件用下面命令</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glfdq9tva3j30x00u04qp.jpg" alt="成功" width="70%"></center>

<center>图9：生成博客文件成功</center>

<p>​    再重新用hexo s 命令启动hexo 在<a href="http://localhost:4000就可以看到我们自己写的第一篇博客啦！">http://localhost:4000就可以看到我们自己写的第一篇博客啦！</a></p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glfdvcau4fj31dd0u0hdt.jpg" alt="页面" width="70%"></center>

<center>图10:博客生成成功</center>

<p>​    到此，hexo博客的搭建就完成了。但是它只能在本地打开，接下来我们需要把它部署到远端去，这里推荐的部署方式是把它部署到github上去。</p>
<h3 id="5-把博客部署到github上公开使用"><a href="#5-把博客部署到github上公开使用" class="headerlink" title="5 把博客部署到github上公开使用"></a>5 把博客部署到github上公开使用</h3><ul>
<li>先要在github上创建一个跟自己用户名相同的后缀为.github.io的仓库，注意这里必须要与用户名相同。</li>
</ul>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glfe566ct6j31a40iyjun.jpg" alt="github" width="70%"></center>

<center>图11:创建特定的github仓库</center>

<ul>
<li>接着需要在【Blog】目录下的终端里裝一个 Git 的部署插件。用下面命令安装</li>
</ul>
<p>cnpm install –save hexo-deployer-git</p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glfjw4ob5sj315a0u0h84.jpg" alt="git插件" width="70%/"></center>

<center>图12:git部署插件安装成功</center>

<ul>
<li><p>配置【Blog】文件夹下的 _config.yml 文件</p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glfek6mdn0j31240mutcq.jpg" alt="配置" width="70%/"></center>

<center>图13:修改配置文件</center>

<p>​    在# Deployment部分添加图示里面的代码，类型type为git,地址repo为刚刚新建的GitHub仓库的地址，如图14。branch为master。</p>
</li>
<li><p>将 hexo 部署到远端 GitHub 上</p>
</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>​    中间会要求输入自己的GitHub账号密码，上述都没有问题就可以部署成功。此时，GitHub刚刚新建的仓库中会多出 hexo 博客的相文件。</p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glffzitzvkj328q0u0jx2.jpg" alt="github" width="70%"></center>

<center>图14:部署成功远端文件</center>

<p>​    到这里，你就可以用 <a href="https://ganming1.github.io/">https://ganming1.github.io</a> 来访问自己的个人网站博客啦。</p>
<h3 id="5-更换博客主题"><a href="#5-更换博客主题" class="headerlink" title="5 更换博客主题"></a>5 更换博客主题</h3><ul>
<li>要更改主题，首先要下载主题</li>
</ul>
<p>可以在【Blog】目录的终端下用 git 下载</p>
<pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>​        <a href="https://github.com/litten/hexo-theme-yilia.git">https://github.com/litten/hexo-theme-yilia.git</a> 是你想下载的主题远端地址。</p>
<p>​        themes/yilia 是你下载主题后保存的地址。</p>
<p>​    下载好主题后会在【Blog】-&gt;【themes】文件里多出我们下载的主题。</p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glfgo6c0tkj31f40o8wh2.jpg" alt="主题" width="70%"></center>

<center>图15:下载的新主题</center>

<ul>
<li>下载好主题后，可以在_config.yml 文件中修改主题。</li>
</ul>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glfgvtlosfj31e20sgafp.jpg" alt="yilia" width="70%"></center>

<center>图16:在配置文件中更改新主题</center>

<p>​    接下来 hexo clean 、hexo g、hexo s、hexo d 清除，生成，开启，推送一系列之前的动作就可以把新主题推送到远端的GitHub个人网站上去。</p>
]]></content>
      <categories>
        <category>工具技巧</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>力扣649-Dota2参议院</title>
    <url>/2020/12/11/li-kou-649-dota2-can-yi-yuan/</url>
    <content><![CDATA[<h1 id="649-Dota2-参议院"><a href="#649-Dota2-参议院" class="headerlink" title="649. Dota2 参议院"></a><center>649. Dota2 参议院</center></h1><h2 id="一、原题题目"><a href="#一、原题题目" class="headerlink" title="一、原题题目"></a><font color="born">一、原题题目</font></h2><h3 id="1-1-题目"><a href="#1-1-题目" class="headerlink" title="1.1 题目"></a>1.1 题目</h3><p>​        Dota2 的世界里有两个阵营：Radiant (天辉)和 Dire(夜魇)。Dota2 参议院由来自两派的参议员组成。现在参议院希望对一个 Dota2 游戏里的改变作出决定。他们以一个基于轮为过程的投票进行。在每一轮中，每一位参议员都可以行使两项权利中的一项：</p>
<ol>
<li><p>禁止一名参议员的权利：参议员可以让另一位参议员在这一轮和随后的几轮中丧失<strong>所有的权利</strong>。</p>
</li>
<li><p>宣布胜利：如果参议员发现有权利投票的参议员都是<strong>同一个阵营的</strong>，他可以宣布胜利并决定在游戏中的有关变化。</p>
</li>
</ol>
<p>​       给定一个字符串代表每个参议员的阵营。字母 “R” 和 “D” 分别代表了 Radiant（天辉）和 Dire（夜魇）。然后，如果有 n 个参议员，给定字符串的大小将是 n。以轮为基础的过程从给定顺序的第一个参议员开始到最后一个参议员结束。这一过程将持续到投票结束。所有失去权利的参议员将在过程中被跳过。假设每一位参议员都足够聪明，会为自己的政党做出最好的策略，你需要预测哪一方最终会宣布胜利并在 Dota2 游戏中决定改变。输出应该是 Radiant 或 Dire。</p>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/dota2-senate">https://leetcode-cn.com/problems/dota2-senate</a></p>
<h3 id="1-2-示例"><a href="#1-2-示例" class="headerlink" title="1.2 示例"></a>1.2 示例</h3><ul>
<li><p><strong>示例1：</strong></p>
<p><strong>输入：</strong>“RD”<br><strong>输出：</strong>“Radiant”<br><strong>解释：</strong>第一个参议员来自 Radiant 阵营并且他可以使用第一项权利让第二个参议员失去权力，因此第二个参议员将被跳过因为他没有任何权利。然后在第二轮的时候，第一个参议员可以宣布胜利，因为他是唯一一个有投票权的人。</p>
</li>
<li><p><strong>示例2：</strong></p>
<p><strong>输入：</strong>“RDD”<br><strong>输出：</strong>“Dire”<br><strong>解释：</strong><br>第一轮中,第一个来自 Radiant 阵营的参议员可以使用第一项权利禁止第二个参议员的权利，第二个来自 Dire 阵营的参议员会被跳过因为他的权利被禁止，第三个来自 Dire 阵营的参议员可以使用他的第一项权利禁止第一个参议员的权利，因此在第二轮只剩下第三个参议员拥有投票的权利,于是他可以宣布胜利。</p>
</li>
<li><p><strong>提示：</strong></p>
<p>给定字符串的长度在 <code>[1, 10,000]</code> 之间.</p>
</li>
</ul>
<h2 id="二、解题思路"><a href="#二、解题思路" class="headerlink" title="二、解题思路"></a><font color="born">二、解题思路</font></h2><h3 id="2-1-题目意思理解"><a href="#2-1-题目意思理解" class="headerlink" title="2.1 题目意思理解"></a>2.1 题目意思理解</h3><p>​    如果读明白了题目的意思，应该可以理解当前参议员要么是被前面的另一队参议员禁止了，否则就应该去禁止后面最靠近它的另一队参议员。</p>
<p>​    可以理解为带攻击属性的一种游戏。先定义下我们的游戏。</p>
<ul>
<li><p>游戏有两个队，D队和R队，目标是杀光其他队的所有人，即可获得胜利✌️。战士是一个一个到达战场的。</p>
</li>
<li><p>Dnumber 和 Rnumber 分别表示两个队的总人数，可以通过一次遍历输入数据获得。</p>
</li>
<li><p>Dattack 和 Rattack 分别表示两个队当前的攻击力属性，为几就表示可以杀死对方几个人。</p>
</li>
<li><p>Ddie 和 Rdie 分别表示两个队当前死了多少英雄战士，当死亡人数等于总人数时，对方获胜。</p>
<p>第一次遍历输入数据</p>
</li>
<li><p>需要统计每个对的总人数并进行一轮厮杀。被杀死的战士将其原大写字母改为小写字母记入史册，永垂不朽。</p>
<p>后几轮遍历就是完全厮杀</p>
</li>
<li><p>直到出现哪个对死亡人数达到总队伍人数，对方队获胜。</p>
</li>
</ul>
<h2 id="三、代码实现"><a href="#三、代码实现" class="headerlink" title="三、代码实现"></a><font color="born">三、代码实现</font></h2><h3 id="3-1-详细代码（Java）"><a href="#3-1-详细代码（Java）" class="headerlink" title="3.1 详细代码（Java）"></a>3.1 详细代码（Java）</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">predictPartyVictory</span><span class="token punctuation">(</span><span class="token class-name">String</span> senate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> <span class="token class-name">Rnumber</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">Dnumber</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>					<span class="token comment">// 记录每个队的总人数</span>
        <span class="token keyword">int</span> <span class="token class-name">Rattack</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">Dattack</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>					<span class="token comment">// 记录每个队的攻击值</span>
        <span class="token keyword">int</span> <span class="token class-name">Rdie</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">Ddie</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>								<span class="token comment">// 记录每个对的死亡战士</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars <span class="token operator">=</span> senate<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 将字符串转换成字符数组方便遍历处理</span>
      <span class="token comment">// 第一轮统计总人数并厮杀一轮</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> chars<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'D'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>		<span class="token comment">// 来的是D队战士</span>
                <span class="token class-name">Dnumber</span><span class="token operator">++</span><span class="token punctuation">;</span>						<span class="token comment">// D队人数加1</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Rattack</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>		<span class="token comment">// 如果R队攻击值大于0</span>
                  	chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'d'</span><span class="token punctuation">;</span>  	<span class="token comment">// 则刚刚上来的D队战士成炮灰</span>
                  	<span class="token class-name">Rattack</span><span class="token operator">--</span><span class="token punctuation">;</span>				<span class="token comment">// 同时消耗R队一个攻击值</span>
                    <span class="token class-name">Ddie</span><span class="token operator">++</span><span class="token punctuation">;</span>						<span class="token comment">// D队死亡人数加1</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token class-name">Dattack</span><span class="token operator">++</span><span class="token punctuation">;</span>			<span class="token comment">// 如果R队攻击值为0，则D队攻击值积累加1</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>									<span class="token comment">// 来的是R队战士</span>
                <span class="token class-name">Rnumber</span><span class="token operator">++</span><span class="token punctuation">;</span>						<span class="token comment">// R队人数加1</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Dattack</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>		<span class="token comment">// 如果D队攻击值大于0</span>
                    chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'r'</span><span class="token punctuation">;</span>		<span class="token comment">// 则刚刚上来的R队战士成炮灰</span>
                  	<span class="token class-name">Dattack</span><span class="token operator">--</span><span class="token punctuation">;</span>				<span class="token comment">// 同时消耗D队一个攻击值</span>
                    <span class="token class-name">Rdie</span><span class="token operator">++</span><span class="token punctuation">;</span>						<span class="token comment">// R队死亡人数加1</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token class-name">Rattack</span><span class="token operator">++</span><span class="token punctuation">;</span>			<span class="token comment">// 如果D队攻击值为0，则R队攻击值积累加1</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token comment">// 后几轮厮杀</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> chars<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          	<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> chars<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>		<span class="token comment">// 这个 if 判断达到轮战的目的</span>
                i <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          	<span class="token comment">// 战士战死，直接跳过，先判断这个可以提高性能</span>
          	<span class="token keyword">if</span> <span class="token punctuation">(</span>chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'d'</span><span class="token operator">||</span>chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'r'</span><span class="token punctuation">)</span>	<span class="token keyword">continue</span><span class="token punctuation">;</span>		
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">Rdie</span><span class="token operator">==</span><span class="token class-name">Rnumber</span><span class="token punctuation">)</span>   <span class="token keyword">return</span> <span class="token string">"Dire"</span><span class="token punctuation">;</span>			<span class="token comment">// R队被歼灭，D队获胜</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">Ddie</span><span class="token operator">==</span><span class="token class-name">Dnumber</span><span class="token punctuation">)</span>   <span class="token keyword">return</span> <span class="token string">"Radiant"</span><span class="token punctuation">;</span>		<span class="token comment">// D队被歼灭，R队获胜</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'D'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>	<span class="token comment">// 来的是D队战士，不加总人数其他同上处理</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Rattack</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Rattack</span><span class="token operator">--</span><span class="token punctuation">;</span>
                    chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'d'</span><span class="token punctuation">;</span>
                    <span class="token class-name">Ddie</span><span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Ddie</span> <span class="token operator">==</span> <span class="token class-name">Dnumber</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">"Radiant"</span><span class="token punctuation">;</span>	<span class="token comment">// 判断是否结束</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token class-name">Dattack</span><span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>								<span class="token comment">// 来的是R队战士，不加总人数其他同上处理</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Dattack</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Dattack</span><span class="token operator">--</span><span class="token punctuation">;</span>
                    chars<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'r'</span><span class="token punctuation">;</span>
                    <span class="token class-name">Rdie</span><span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Rdie</span> <span class="token operator">==</span> <span class="token class-name">Rnumber</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">"Dire"</span><span class="token punctuation">;</span>	<span class="token comment">// 判断是否结束</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token class-name">Rattack</span><span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>	<span class="token comment">// 因为上面的return语句都在if语句后，所以加上这个不会被执行的return语句</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="3-2-算法执行结果"><a href="#3-2-算法执行结果" class="headerlink" title="3.2 算法执行结果"></a>3.2 算法执行结果</h3><center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glk8jfyf4bj30s40ee75b.jpg" alt="算法执行结果" width="80%/"></center>

<h2 id="四、总结分析"><a href="#四、总结分析" class="headerlink" title="四、总结分析"></a><font color="born">四、总结分析</font></h2><p>​    个人感觉这个题目是题目意思有点让人费解，读懂题目意思后思路还是挺简单的。</p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>中等</tag>
        <tag>算法题</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode写HTML文档</title>
    <url>/2020/12/10/vscode-xie-html-wen-dang/</url>
    <content><![CDATA[<h1 id="VSCode-写-HTML-文档"><a href="#VSCode-写-HTML-文档" class="headerlink" title="VSCode 写 HTML 文档"></a><center>VSCode 写 HTML 文档</center></h1><h2 id="一、VSCode-的使用"><a href="#一、VSCode-的使用" class="headerlink" title="一、VSCode 的使用"></a><font color="born">一、VSCode 的使用</font></h2><h3 id="1-1-软件的下载和基本的-html-文件创建"><a href="#1-1-软件的下载和基本的-html-文件创建" class="headerlink" title="1.1 软件的下载和基本的 html 文件创建"></a>1.1 软件的下载和基本的 html 文件创建</h3><ul>
<li><p>VSCode 下载可以去<a href="https://code.visualstudio.com/">VSCode官网</a>下载</p>
</li>
<li><p>新建文件，该文件名和和文件格式为<font color="red">.html</font>即可</p>
</li>
<li><p>在新建的 html 文件中输入 ! 接着回车或按 Tab 键即可生成网页骨架。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 输入 ! 回车可快速生成下面骨架 --&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>修改网页的&lt; title &gt; 和 &lt; body &gt; 标签为自己想修改的内容然后右键选择Open In Default Browser 在默认浏览器中打开，可能你的右键没有这个选项，需要安装插件。</p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gliqfg55fxj317a0s8djx.jpg" alt="默认浏览器中打开网页" width="70%/"></center>
</li>
<li><p>觉得页面代码字体不合适可以通过 command + 加号键、和 command + 减号键调整字体大小。</p>
</li>
</ul>
<h3 id="1-2-VSCode-插件使用"><a href="#1-2-VSCode-插件使用" class="headerlink" title="1.2 VSCode 插件使用"></a>1.2 VSCode 插件使用</h3><ul>
<li><p>插件安装方法，在最左边的是插件功能选择，之后再搜索框搜索插件名安装，重启 VSCode 即可生效。</p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gliqprm66nj319e0tsdnt.jpg" alt="VSCode插件安装" width="70%/"></center>
</li>
<li><p>推荐安装的插件</p>
<ul>
<li><font color="red">Chinese(Simplified)Language Pack for VS Code</font>：中文（简体）语言包</li>
<li><font color="red">Open in Browser</font>：右键选择在浏览器中打开 html 文件，上面演示的功能</li>
<li><font color="red">JS-CSS-HTML Formatter</font>：每次保存，都会自动格式化js、css 和 html 代码</li>
<li><font color="red">Auto Rename Tag</font>：自动重命名配对的 HTML/XML 标签</li>
<li><font color="red">CSS Peek</font>：追踪至样式</li>
</ul>
<p>更多好用的插件希望大家相互推荐~</p>
</li>
</ul>
<h3 id="1-3-VSCode-工具生成的骨架标签新增的代码"><a href="#1-3-VSCode-工具生成的骨架标签新增的代码" class="headerlink" title="1.3 VSCode 工具生成的骨架标签新增的代码"></a>1.3 VSCode 工具生成的骨架标签新增的代码</h3><ul>
<li><p><font color="red">文档类型声明标签 &lt; !DOCTYPE &gt;</font>：告诉浏览器使用那种 HTML 版本来显示网页</p>
<p>&lt; !DOCTYPE html &gt; 表示当前页面采用的是 HTML5 版本来显示网页。&lt; !DOCTYPE html &gt; 不是一个 HTML 标签，它只是一个文档类型声明标签。</p>
</li>
<li><p><font color="red">lang 语言种类</font>：用来定义当前文档显示的语言</p>
<p><font color="red">en</font> 定义语言为英语，<font color="red">zh-CN</font>  定义语言为中文。无论哪种都可以在网页里写中英文，都能正常显示，这个属性只用于<font color="red">浏览器翻译功能的判断</font>而已。</p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glircl05pzj314w0kuacx.jpg" alt="lang 属性的影响" width="67%/"></center>
</li>
<li><p><font color="red">字符集</font>：是多个字符的集合，以便计算机能够识别和存储各种文字</p>
<p>在&lt; head&gt; 标签内，可以通过 &lt; meta&gt; 标签的 charset 属性来规定 HTML 文档使用的字符编码集。</p>
<p>charset 常用值有：GB2312、BIG5、GBK 和 UTF-8，其中 <font color="red">UTF-8</font> 也被称为<font color="red">万国码</font>，基本包含了全世界所有国家需要用到的字符。</p>
<p>【注意】:<font color="red">上面语法是必须要写的代码，否则可能引起乱码的情况。一般情况下，统一使用“UTF-8”编码，尽量统一写成标准的 “UTF-8”，不要写成 “utf8” 或 “UTF8”。</font></p>
</li>
</ul>
]]></content>
      <categories>
        <category>工具技巧</category>
      </categories>
      <tags>
        <tag>VSCode</tag>
        <tag>Html</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/12/07/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>HTML 标签（上）</title>
    <url>/2020/12/10/html-biao-qian-shang/</url>
    <content><![CDATA[<h1 id="HTML-标签（上）"><a href="#HTML-标签（上）" class="headerlink" title="HTML 标签（上）"></a><center>HTML 标签（上）</center></h1><h2 id="一、HTML-简介"><a href="#一、HTML-简介" class="headerlink" title="一、HTML 简介"></a><font color="born">一、HTML 简介</font></h2><h3 id="1-1-网页"><a href="#1-1-网页" class="headerlink" title="1.1 网页"></a>1.1 网页</h3><ul>
<li><p><strong>什么是网页？</strong></p>
<p>要知道什么是网页，先要理解网站的概念。<font color="red">网站</font>是指在因特网上根据一定的规则，使用 HTML 等制作的用于展示特定内容相关的网页集合。<font color="red">网页</font>就是网站中的一页，通常是 <font color="red">HTML 格式的文件</font>，它要通过浏览器来阅读。</p>
<p><font color="red">网页是构成网站的基本元素</font>，它通常由图片、链接、文字、声音、视频等<font color="red">元素</font>组成。通常我们看到的网页，常见以 <font color="red">.htm</font> 或 <font color="red">.html</font> 后缀结尾的文件，因此将其俗称为 <font color="red">HTML 文件</font>。</p>
</li>
<li><p><strong>什么是 HTML</strong></p>
<p><font color="red">HTML</font> 指的是超文本标记语言（ <font color="red"><strong>H</strong>yper <strong>T</strong>est <strong>M</strong>arkup <strong>L</strong>anguage</font>），它是用来描述网页的一种语言。是具有一套标记标签的标记语言。</p>
<p>所谓的超文本，有两层含义：</p>
<ul>
<li>它可以加入图片、声音、动画、多媒体等内容（超越了文本限制）。</li>
<li>它还可以从一个文件跳转到另一个文件，与世界各地主机的文件链接（超级链接文本）。</li>
</ul>
</li>
<li><p><strong>网页的形成</strong></p>
<p>网页是由网页元素组成的，这些元素是利用 html 标签描述出来，然后通过浏览器解析来显示给用户的。</p>
<p>前端人员开发代码 —-&gt; 浏览器解析、渲染代码 —-&gt; 生成最后的 Web 页面</p>
</li>
</ul>
<h3 id="1-2-常用的浏览器"><a href="#1-2-常用的浏览器" class="headerlink" title="1.2 常用的浏览器"></a>1.2 常用的浏览器</h3><ul>
<li><p><strong>常用的浏览器</strong></p>
<p>浏览器是网页显示、运行的平台。常用的浏览器有 IE 、火狐（Firefox）、谷歌（Chrome）、Safari、和 Opera 等。</p>
<p>查看浏览器市场份额：<a href="http://tongji.baidu.com/data/browser">http://tongji.baidu.com/data/browser</a> 谷歌浏览器占最大市场份额，强烈推荐使用。</p>
</li>
<li><p><strong>浏览器内核</strong></p>
<p>浏览器内核（渲染引擎）：负责读取网页内容，整理讯息，计算网页显示方式并显示页面。</p>
<table border="1" cellspacing="0" align="center" style="text-align: center;width: 75%">
  <tbody style="width: 100%;">
        <tr><!--表头-->
            <th>浏览器</th><th>内核</th><th>备注</th>
        </tr>
        <tr><!--第二行-->
            <td>IE</td><td>Trident</td><td>IE、猎豹安全、360极速浏览器、百度浏览器</td>
        </tr>
        <tr><!--第三行-->
            <td>Firefox</td><td>Gecko</td><td>火狐浏览器内核</td>
        </tr>
        <tr><!--第四行-->
            <td>Safari</td><td>Webkit</td><td>苹果浏览器内核</td>
        </tr>
        <tr><!--第五行-->
            <td>Chrome/Opera</td><td>Blink</td><td>谷歌、Opera 浏览器内核。其实是 WebKit 的分支。</td>
        </tr>
  </tbody>
</table>

<p>目前国内一般浏览器都会采用 Webkit/Blink 内核，如360、UC、QQ、搜狗等浏览器。</p>
</li>
</ul>
<h3 id="1-3-Web-标准"><a href="#1-3-Web-标准" class="headerlink" title="1.3 Web 标准"></a>1.3 Web 标准</h3><p>​    Web 标准是由 W3C组织和其他标准化组织制定的一系列标准的集合。W3C（万维网联盟）是国际最著名的标准化组织。</p>
<ul>
<li><p><strong>为什么需要 web 标准</strong></p>
<p>浏览器不同，它们显示页面或者陪伴就有些许差异。有了 web 标准就可以消除所有浏览器的显示差异。</p>
</li>
<li><p><strong>web 标准的构成</strong></p>
<p>web 标准主要包括 <font color="red">结构（Structure）</font>、 <font color="red">表现（Presentation）</font>、 <font color="red">行为（Behavior）</font>三个方面。</p>
<ul>
<li>结构：结构用于对<strong>网页元素</strong>进行整理和分类，主要用 HTML。</li>
<li>表现：表现用于设置网页元素的板式、颜色、大小等<strong>外观样式</strong>，主要用 CSS。</li>
<li>行为：行为是指网页模型的定义及<strong>交互</strong>的编写，主要用 Javascript。</li>
</ul>
<p>web 标准提出的最佳体验方案：<font color="red">结构、样式、行为相分离</font>。即应该把<font color="red">结构写到 HTML 文件中，表现写到 CSS 中，行为写到 JavaScript 文件中</font>。</p>
</li>
</ul>
<h2 id="二、HTML-标签介绍"><a href="#二、HTML-标签介绍" class="headerlink" title="二、HTML 标签介绍"></a><font color="born">二、HTML 标签介绍</font></h2><h3 id="2-1-HTML-语法规范"><a href="#2-1-HTML-语法规范" class="headerlink" title="2.1 HTML 语法规范"></a>2.1 HTML 语法规范</h3><ul>
<li><p><strong>基本语法概述</strong></p>
<p>HTML 标签是<font color="red">由尖括号包围的关键词</font>，例如 <font color="red">&lt;html&gt;</font>。</p>
<p>HTML 标签通常是成对出现的，例如 &lt;html&gt; 和 &lt;/html&gt; ，它们称为<font color="red">双标签</font>。第一个是开始标签，第二个是结束标签。</p>
<p>也有特殊的标签是单个的标签，例如 &lt;br /&gt; ，它们称为<font color="red">单标签</font>。</p>
</li>
<li><p><strong>标签关系</strong></p>
<p>双标签关系可以分为包含关系和并列关系两类。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">/* 包含关系 */
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
/* 并列关系 */
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tead</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

</li>
</ul>
<h3 id="2-2-HTML-基本结构标签"><a href="#2-2-HTML-基本结构标签" class="headerlink" title="2.2 HTML 基本结构标签"></a>2.2 HTML 基本结构标签</h3><ul>
<li><p><strong>第一个 HTML 网页</strong></p>
<p>每一个网页都会有一个基本的结构标签（也称之为骨架标签），页面内容也是在这些基本标签上书写的。HTML 页面也称为 HTML 文档。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>我的第一个页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    从来没有真正的绝境, 只有心灵的迷途|
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glh0faw7tij30xs0kugnd.jpg" alt="我的第一个网页" width="100%/"></center>

<table border="1" cellspacing="0" align="center" style="text-align: center;width: 68%">
        <tbody><tr><!--表头-->
            <th>标签名</th><th>定义</th><th>说明</th>
        </tr>
        <tr><!--第二行-->
            <td>&lt;html&gt;&lt;/html&gt;</td><td>HTML 标签</td><td>页面中最大的标签，我们称为根标签</td>
        </tr>
        <tr><!--第三行-->
            <td>&lt;head&gt;&lt;/head&gt;</td><td>文档的头部</td><td>网页的相关信息写在这里，必须要有 title 标签</td>
        </tr>
        <tr><!--第四行-->
            <td>&lt;title&gt;&lt;/title&gt;</td><td>文档的标题</td><td>网页的标题</td>
        </tr>
        <tr><!--第五行-->
            <td>&lt;body&gt;&lt;/body&gt;</td><td>文档的主体</td><td>元素内容，页面内容都放这里</td>
        </tr>
</tbody></table>

</li>
</ul>
<h2 id="三、开发工具-VSCode-的使用"><a href="#三、开发工具-VSCode-的使用" class="headerlink" title="三、开发工具 VSCode 的使用"></a><font color="born">三、开发工具 VSCode 的使用</font></h2><p>​    工欲善其事必先利其器，网页的开发工具有很多，Dreamweaver、sublime、WebStorm、HBuilder、Visual Studio Code等。其中 VSCode 在前端开发中最长用。</p>
<h3 id="3-1-软件的下载和基本的-html-文件创建"><a href="#3-1-软件的下载和基本的-html-文件创建" class="headerlink" title="3.1 软件的下载和基本的 html 文件创建"></a>3.1 软件的下载和基本的 html 文件创建</h3><ul>
<li><p>VSCode 下载可以去<a href="https://code.visualstudio.com/">VSCode官网</a>下载</p>
</li>
<li><p>新建文件，该文件名和和文件格式为 <font color="red">.html</font> 即可</p>
</li>
<li><p>在新建的 html 文件中输入 ! 接着回车或按 Tab 键即可生成网页骨架。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 输入 ! 回车可快速生成下面骨架 --&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>修改网页的&lt;title&gt; 和 &lt;body&gt; 标签为自己想修改的内容然后右键选择Open In Default Browser 在默认浏览器中打开，可能你的右键没有这个选项，需要安装插件。</p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gliqfg55fxj317a0s8djx.jpg" alt="默认浏览器中打开网页" width="70%/"></center>
</li>
<li><p>觉得页面代码字体不合适可以通过 command + 加号键、和 command + 减号键调整字体大小。</p>
</li>
</ul>
<h3 id="3-2-VSCode-插件使用"><a href="#3-2-VSCode-插件使用" class="headerlink" title="3.2 VSCode 插件使用"></a>3.2 VSCode 插件使用</h3><ul>
<li><p><strong>插件安装方法，在最左边的是插件功能选择，之后再搜索框搜索插件名安装，重启 VSCode 即可生效。</strong></p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gliqprm66nj319e0tsdnt.jpg" alt="VSCode插件安装" width="70%/"></center>
</li>
<li><p><strong>推荐安装的插件</strong></p>
<ul>
<li><font color="red">Chinese(Simplified)Language Pack for VS Code</font>：中文（简体）语言包</li>
<li><font color="red">Open in Browser</font>：右键选择在浏览器中打开 html 文件，上面演示的功能</li>
<li><font color="red">JS-CSS-HTML Formatter</font>：每次保存，都会自动格式化js、css 和 html 代码</li>
<li><font color="red">Auto Rename Tag</font>：自动重命名配对的 HTML/XML 标签</li>
<li><font color="red">CSS Peek</font>：追踪至样式</li>
</ul>
<p>更多好用的插件希望大家相互推荐~</p>
</li>
</ul>
<h3 id="3-3-VSCode-工具生成的骨架标签新增的代码"><a href="#3-3-VSCode-工具生成的骨架标签新增的代码" class="headerlink" title="3.3 VSCode 工具生成的骨架标签新增的代码"></a>3.3 VSCode 工具生成的骨架标签新增的代码</h3><ul>
<li><p><strong><font color="red">文档类型声明标签 &lt; !DOCTYPE &gt;</font>：告诉浏览器使用那种 HTML 版本来显示网页</strong></p>
<p>&lt;!DOCTYPE html&gt; 表示当前页面采用的是 HTML5 版本来显示网页。&lt;!DOCTYPE html&gt; 不是一个 HTML 标签，它只是一个文档类型声明标签。</p>
</li>
<li><p><strong><font color="red">lang 语言种类</font>：用来定义当前文档显示的语言</strong></p>
<p><font color="red">en</font> 定义语言为英语，<font color="red">zh-CN</font>  定义语言为中文。无论哪种都可以在网页里写中英文，都能正常显示，这个属性只用于<font color="red">浏览器翻译功能的判断</font>而已。</p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glircl05pzj314w0kuacx.jpg" alt="lang 属性的影响" width="67%/"></center>
</li>
<li><p><strong><font color="red">字符集</font>：是多个字符的集合，以便计算机能够识别和存储各种文字</strong></p>
<p>在&lt;head&gt; 标签内，可以通过 &lt;meta&gt; 标签的 charset 属性来规定 HTML 文档使用的字符编码集。</p>
<p>charset 常用值有：GB2312、BIG5、GBK 和 UTF-8，其中 <font color="red">UTF-8</font> 也被称为<font color="red">万国码</font>，基本包含了全世界所有国家需要用到的字符。</p>
<p>【注意】:<font color="red">上面语法是必须要写的代码，否则可能引起乱码的情况。一般情况下，统一使用“UTF-8”编码，尽量统一写成标准的 “UTF-8”，不要写成 “utf8” 或 “UTF8”。</font></p>
</li>
</ul>
<h2 id="四、HTML-常用标签"><a href="#四、HTML-常用标签" class="headerlink" title="四、HTML 常用标签"></a><font color="born">四、HTML 常用标签</font></h2><p>​    学习标签是有技巧的，重点是记住每个标签的语义。简单理解就是指标签的含义，即这个标签是用来干嘛的。 根据标签的语义，在合适的地方给一个最为合理的标签，可以让页面结构更清晰。</p>
<h3 id="4-1-标题标签-lt-h1-gt-lt-h6-gt"><a href="#4-1-标题标签-lt-h1-gt-lt-h6-gt" class="headerlink" title="4.1 标题标签<h1> - <h6>"></a>4.1 标题标签&lt;h1&gt; - &lt;h6&gt;</h3><ul>
<li><p>为了使网页更具有语义化，我们经常会在页面中用到标题标签。HTML 提供了 6 个等级的网页标题， 即 &lt;h1&gt; - &lt;h6&gt;。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>标题一共六级选,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>文字加粗一行显。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>由大到小依次减，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>从重到轻随之变。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">&gt;</span></span>语法规范书写后，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">&gt;</span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span><span class="token punctuation">&gt;</span></span>具体效果刷新见。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gliu2cxuncj31680p2mzq.jpg" alt="标题标签演示" width="70%/"></center>
</li>
<li><p>h 是单词 head 的缩写，意为头部、标题。</p>
</li>
<li><p>标签语义：作为标题使用，并且依据重要性递减。</p>
</li>
<li><p>特点有：</p>
<ul>
<li><p>加了标题的文字会变的加粗，字号也会依次变大。</p>
</li>
<li><p><font color="red">一个标题独占一行。</font></p>
</li>
</ul>
</li>
</ul>
<h3 id="4-2-lt-p-gt-段落标签和-lt-br-gt-换行标签"><a href="#4-2-lt-p-gt-段落标签和-lt-br-gt-换行标签" class="headerlink" title="4.2 <p> 段落标签和 <br /> 换行标签"></a>4.2 &lt;p&gt; 段落标签和 &lt;br /&gt; 换行标签</h3><ul>
<li><p>在网页中，要把文字有条理地显示出来，就需要将这些文字分段显示。在 HTML 标签中，<font color="red">&lt;p&gt;</font>标签用于<font color="red">定义段落</font>，它可以将整个网页分为若干个段落。</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;p&gt; 我是一个段落标签 &lt;/p&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>p 是单词 paragraph的缩写，意为段落。 </p>
</li>
<li><p>标签语义：可以把 HTML 文档分割为若干段落。</p>
</li>
<li><p>特点:</p>
<ul>
<li>文本在一个段落中会根据浏览器窗口的大小自动换行。</li>
<li><font color="red">段落和段落之间保有空隙</font>。</li>
</ul>
</li>
<li><p>在 HTML 中，一个段落中的文字会从左到右依次排列，直到浏览器窗口的右端，然后才自动换行。如果希望某段文本强制换行显示，就需要使用换行标签 &lt;br /&gt;。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span> 我是一个段落标签 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span> 我是一个换行的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>段落标签 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gliuhmfyyqj30vm0kujtg.jpg" alt="段落和换行标签" width="80%/"></center>
</li>
<li><p>br 是单词 break 的缩写，意为打断、换行。 </p>
</li>
<li><p>标签语义:强制换行。</p>
</li>
<li><p>特点:</p>
<ul>
<li>&lt;br /&gt; 是个<font color="red">单标签</font>。</li>
<li>&lt;br /&gt; 标签只是简单地开始新的一行，跟段落不一样，段落之间会插入一些垂直的间距。</li>
</ul>
</li>
</ul>
<h3 id="4-3-文本格式化标签"><a href="#4-3-文本格式化标签" class="headerlink" title="4.3 文本格式化标签"></a>4.3 文本格式化标签</h3><ul>
<li><p>在网页中，有时需要为文字设置<strong>粗体</strong>、<em>斜体</em> 或<u>下划线</u>或<del>删除线</del>等效果，这时就需要用到 HTML 中的<font color="red">文本格式化标签</font>，使文字以特殊的方式显示。</p>
</li>
<li><p>标签语义: 突出重要性, 比普通文字更重要。格式化标签表</p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glj5j35gaaj31g20aqac5.jpg" alt="格式化标签表" width="100%;/"></center>



</li>
</ul>
<h3 id="4-4-lt-div-gt-和-lt-span-gt-盒子标签"><a href="#4-4-lt-div-gt-和-lt-span-gt-盒子标签" class="headerlink" title="4.4 <div> 和 <span> 盒子标签"></a>4.4 &lt;div&gt; 和 &lt;span&gt; 盒子标签</h3><ul>
<li><p>&lt;div&gt; 和 &lt;span&gt; 是没有语义的，它们就是一个盒子，用来装内容的。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span> 我是div1,同时演示下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>加粗<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span> 我是div2,同时演示下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">&gt;</span></span>倾斜<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span> 我是span1,同时演示下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">&gt;</span></span>删除线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>del</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span> 我是span2,同时演示下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ins</span><span class="token punctuation">&gt;</span></span>下划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ins</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gliv2nuen5j30vm0kuq5e.jpg" alt="文本格式化标签和盒子标签" width="67%/"></center>
</li>
<li><p>div 是 division 的缩写，表示分割、分区。span 意为跨度、跨距。</p>
</li>
<li><p>特点：</p>
<ul>
<li><font color="red">&lt;div&gt; </font>标签用来布局，但是现在一行只能放一个&lt;div&gt;。 <font color="red">大盒子</font></li>
<li><font color="red">&lt;span&gt;</font> 标签用来布局，一行上可以多个 &lt;span&gt;。<font color="red">小盒子</font></li>
</ul>
</li>
</ul>
<h3 id="4-5-lt-img-gt-图像标签"><a href="#4-5-lt-img-gt-图像标签" class="headerlink" title="4.5 < img> 图像标签"></a>4.5 &lt; img&gt; 图像标签</h3><ul>
<li><p>在 HTML 标签中，&lt;img&gt; 标签用于定义 HTML 页面中的图像。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图像URL<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p><font color="red">img</font> 是单词 image 的缩写，意为图像。</p>
</li>
<li><p><font color="red">src</font> 是 &lt;img&gt; 标签的<font color="red">必须属性</font>，它用于<font color="red">指定图像文件的路径和文件名</font>。</p>
</li>
<li><p>图像标签的属性：</p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glj5uulhwsj31g40f076e.jpg" alt="图像标签属性表" width="90%/"></center>
</li>
<li><p>图像标签属性注意点：</p>
<ul>
<li>图像标签可以拥有多个属性，必须写在标签名的后面。</li>
<li>属性之间<font color="red">不分先后</font>顺序，标签名与属性、属性与属性之间均<font color="red">以空格分开</font>。</li>
<li>属性采取<font color="red">键值对</font>&gt;的格式，即 key=“value” 的格式，<font color="red">属性 = “属性值”</font>。</li>
</ul>
</li>
<li><p>路径可以分为： </p>
<ul>
<li><font color="red">相对路径</font>是以引用文件所在位置为参考基础，而建立出的目录路劲，这里简单来说，图片相对于 HTML 页面的位置。相对路径是从代码所在的这个文件出发，去寻找目标文件的，而我们这里所说的上一级 、下一级和同一级就是图片相对于 HTML 页面的位置。</li>
</ul>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glj5xrztm6j31g808swg8.jpg" alt="相对路劲的分类" width="100%/"></center>

<ul>
<li><font color="red">绝对路径</font>是指目录下的绝对位置，直接到达目标位置，通常是从盘符开始的路径。例如，Windown系统上”<font color="red">D:\web\img\logo.gif</font>“或MacOS系统上”<font color="red">/Users/ganmingpro/Desktop/log.jpg</font>“或完整的网络地址”<a href="http://www.itcast.cn/images/logo.gif&quot;%E3%80%82">http://www.itcast.cn/images/logo.gif"。</a></li>
</ul>
</li>
</ul>
<h3 id="4-6-lt-a-gt-超链接标签"><a href="#4-6-lt-a-gt-超链接标签" class="headerlink" title="4.6 <a> 超链接标签"></a>4.6 &lt;a&gt; 超链接标签</h3><ul>
<li><p>超链接可以链接到其他想要跳转的地方</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>跳转目标<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>目标窗口的弹出方式<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> 文本或图像 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>a 是单词 anchor 的缩写，意为:锚。</p>
<center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glj5zx89x5j317c06o3zf.jpg" alt="相对路劲的分类" width="100%/"></center>
</li>
<li><p>链接的分类：</p>
<ol>
<li><font color="red">外部链接</font>：例如&lt;a href=”<a href="http://www.baidu.com&quot;>/">http://www.baidu.com"&gt;</a> 百度 &lt;/a&gt;。</li>
<li><font color="red">内部链接</font>：网站内部页面之间的相互链接. 直接链接内部页面名称即可，例如 &lt;a href=”index.html”&gt; 首页 &lt;/a&gt;。</li>
<li><font color="red">空链接</font>：如果当时没有确定链接目标时，&lt;a href=”#”&gt; 首页 &lt;/a&gt; 。</li>
<li><font color="red">下载链接</font>：如果 href 里面地址是一个文件或者压缩包，点击这个链接会下载这个文件。</li>
<li><font color="red">网页元素链接</font>：在网页中的各种网页元素，如文本、图像、表格、音频、视频等都可以添加超链接。</li>
<li><font color="red">锚点链接</font>：当我们想点击链接，可以快速定位到页面中的某个位置时用锚点链接。<ul>
<li>在链接文本的 href 属性中，设置属性值为<font color="red">#名字</font> 的形式，如&lt;a href=”#two”&gt; 第2集 &lt;/a&gt;。</li>
<li>找到目标位置标签，里面添加一个 <font color="red">id 属性 = 刚才的名字</font> ，如&lt;h3 id=”two”&gt;第2集介绍&lt;/h3&gt;。</li>
</ul>
</li>
</ol>
</li>
</ul>
<h3 id="4-7-HTML-中的注释和特殊字符"><a href="#4-7-HTML-中的注释和特殊字符" class="headerlink" title="4.7 HTML 中的注释和特殊字符"></a>4.7 HTML 中的注释和特殊字符</h3><ul>
<li><p>注释：如果需要在 HTML 文档中添加一些便于阅读和理解但又不需要显示在页面中的注释文字，就需要使用注释标签。 HTML 中的注释以” <font color="red">&lt;!–</font> “开头，以” <font color="red">–&gt;</font> “结束。VSCode 中注释快捷键为 command + / (MacOS)。</p>
</li>
<li><p>特殊字符：在 HTML 页面中，一些特殊的符号很难或者不方便直接使用，此时我们就可以使用下面的字符来替代。</p>
</li>
</ul>
  <center><img src="https://tva1.sinaimg.cn/large/0081Kckwly1glj00syet3j31700rmwh2.jpg" alt="特殊字符表" width="100%/"></center>

]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>
